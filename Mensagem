e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1: /*!\file kernel_slave.c
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:2:  * HEMPS VERSION - 8.0 - support for RT applications
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:3:  *
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:4:  * Distribution:  June 2016
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:5:  *
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:6:  * Edited by: Marcelo Ruaro - contact: marcelo.ruaro@acad.pucrs.br
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:7:  *
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:8:  * Research group: GAPH-PUCRS   -  contact:  fernando.moraes@pucrs.br
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:9:  *
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:10:  * \brief
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:11:  * Kernel slave is the system slave used to execute user's tasks.
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:12:  *
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:13:  * \detailed
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:14:  * kernel_slave is the core of the OS running into the slave processors.
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:15:  * Its job is to runs the user's task. It communicates whit the kernel_master to receive new tasks
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:16:  * and also notifying its finish.
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:17:  * The kernel_slave file uses several modules that implement specific functions
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:18:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:19: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:20: #include "kernel_slave.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:21: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:22: #include "../../../include/kernel_pkg.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:23: #include "../../include/api.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:24: #include "../../include/plasma.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:25: #include "../../include/services.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:26: #include "../../modules/task_location.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:27: #include "../../modules/task_control.h" 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:28: #include "../../modules/packet.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:29: #include "../../modules/communication.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:30: #include "../../modules/pending_service.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:31: #include "../../modules/local_scheduler.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:32: #include "../../modules/utils.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:33: #include "../../modules/control_messages_fifo.h" 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:34: #include "../../modules/csiphash.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:35: #include "../../modules/lfsr.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:36: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:37: #include "../../modules/osz_slave.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:38: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:39: #ifdef AES_MODULE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:40: #include "../../modules/aes.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:41: #endif 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:42: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:43: #ifdef PRESENT_MODULE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:44: #include "../../modules/present.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:45: #endif 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:46: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:47: #if MIGRATION_ENABLED
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:48: #include "../../modules/task_migration.h"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:49: #endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:50: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:52: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:53: //Globals
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:54: unsigned int 	net_address;				//!< Store the current XY address
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:55: unsigned int 	schedule_after_syscall;		//!< Signals the syscall function (assembly implemented) to call the scheduler after the syscall
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:56: unsigned int 	cluster_master_address;		//!< Store the cluster master XY address
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:57: unsigned int 	last_idle_time;				//!< Store the last idle time duration
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:58: unsigned int 	total_slack_time;			//!< Store the total of the processor idle time
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:59: TCB 			idle_tcb;					//!< TCB pointer used to run idle task
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:60: TCB *			current;					//!< TCB pointer used to store the current task executing into processor
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:61: Message 		msg_write_pipe;				//!< Message variable which is used to copy a message and send it by the NoC
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:62: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:65: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:67: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:68: #ifdef AES_MODULE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:71: #endif 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:72: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:73: #ifdef PRESENT_MODULE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:76: #endif 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:77: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:78: /** Assembles and sends a TASK_TERMINATED packet to the master kernel
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:79:  *  \param terminated_task Terminated task TCB pointer
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:80:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:81: void send_task_terminated(TCB * terminated_task){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:82: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:84: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:86: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:88: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:90: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:92: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:94: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:95: 	if (terminated_task->master_address != cluster_master_address){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:96: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:98: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:100: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:102: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:104: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:106: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:108: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:109: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:110: 	
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:111: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:112: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:113: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:114: /** Assembles and sends a TASK_ALLOCATED packet to the master kernel
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:115:  *  \param allocated_task Allocated task TCB pointer
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:116:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:117: void send_task_allocated(TCB * allocated_task){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:119: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:121: 	if(allocated_task->secure == 1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:124: 	}else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:126: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:128: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:129: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:130: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:131: /** Assembles and sends a REAL_TIME_CHANGE packet to the master kernel
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:132:  *  \param tcb_ptr TCB pointer of the task that change its real-time parameters
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:133:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:134: void send_task_real_time_change(TCB * tcb_ptr){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:135: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:137: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:139: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:141: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:143: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:145: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:147: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:149: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:151: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:152: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:153: /** Assembles and sends a DULL packet to target
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:154:  *  \param target TCB pointer of the task that change its real-time parameters
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:155:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:156: void send_dull_packet(){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:157: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:159: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:161: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:163: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:165: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:167: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:169: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:171: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:173: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:175: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:177: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:178: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:179: /** Assembles and sends a SLACK_TIME_REPORT packet to the master kernel
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:180:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:181: void send_slack_time_report(){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:182: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:184: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:186: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:188: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:190: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:192: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:193: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:194: ///** Assembles and sends a UPDATE_TASK_LOCATION packet to a slave processor. Useful because task migration
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:195: // * \param target_proc Target slave processor which the packet will be sent
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:196: // * \param task_id Task ID that have its location updated
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:197: // * \param new_task_location New location (slave processor address) of the task
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:198: // */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:199: //void send_update_task_location(unsigned int target_proc, unsigned int task_id, unsigned int new_task_location){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:200: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:202: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:204: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:206: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:208: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:210: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:212: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:214: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:215: //}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:216: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:217: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:218: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:219: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:220: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:221: /** Useful function to writes a message into the task page space
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:222:  * \param task_tcb_ptr TCB pointer of the task
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:223:  * \param msg_lenght Lenght of the message to be copied
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:224:  * \param msg_data Message data
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:225:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:226: void write_local_msg_to_task(TCB * task_tcb_ptr, int msg_lenght, int * msg_data){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:227: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:229: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:230: 	msg_ptr = (Message*)((task_tcb_ptr->offset) | ((unsigned int)task_tcb_ptr->reg[3])); //reg[3] = address message
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:231: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:233: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:234: 	for (int i=0; i<msg_ptr->length; i++)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:236: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:237: 	//Unlock the blocked task
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:239: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:240: 	//Set to ready to execute into scheduler
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:242: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:243: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:244: /** Syscall handler. It is called when a task calls a function defined into the api.h file
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:245:  * \param service Service of the syscall
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:246:  * \param arg0 Generic argument
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:247:  * \param arg1 Generic argument
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:248:  * \param arg2 Generic argument
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:249:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:250: int Syscall(unsigned int service, unsigned int arg0, unsigned int arg1, unsigned int arg2) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:251: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:262: 	
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:263: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:265: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:266: 	switch (service) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:267: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:269: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:271: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:273: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:275: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:277: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:278: 			if (MemoryRead(DMNI_SEND_ACTIVE)){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:280: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:281: 			#ifdef SESSION_MANAGER
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:282: 			for (j = 0; j < MAX_SESSIONS; j++) // Termina as sessões abertas que tenham essa tarefa como consumidora
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:283:   			{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:284: 				if ((deliveryTicket[j].consumer == current->id) && (deliveryTicket[j].status != BLANK)){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:286: 					Seek(MSG_REQUEST_RECEIPT, 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:287: 					((0xFFC0 << 16) | (deliveryTicket[j].pairIndex << 16) | ((deliveryTicket[j].producer << 8) & 0xFF00) | (deliveryTicket[j].consumer & 0xFF))
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:288: 					,get_task_location(deliveryTicket[j].producer)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:292: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:293: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:294: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:296: 			if (j >= 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:301: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:302: 			#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:304: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:305: 			// adjust appID e taskID to 6 bits
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:308: 			if(current->master_address != cluster_master_address){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:310: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:311: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:313: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:315: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:317: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:318: 			if (!is_another_task_running(appID)){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:319: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:321: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:322: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:324: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:326: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:328: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:331: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:332: 			if ( MemoryRead(DMNI_SEND_ACTIVE) ){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:334: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:335: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:337: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:340: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:343: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:345: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:347: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:348: 			//Test if the consumer task is not allocated
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:349: 			if (consumer_PE == -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:350: 				//Task is blocked until its a TASK_RELEASE packet
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:353: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:354: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:355: 			/*Points the message in the task page. Address composition: offset + msg address*/
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:357: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:359: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:360: 			if (consumer_PE == net_address){//message is local
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:361: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:363: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:365: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:366: 				#if MIGRATION_ENABLED
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:367: 					if (requesterTCB->proc_to_migrate != -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:370: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:372: 					}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:373: 				#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:374: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:375: 			}else{//message is NOT local
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:376: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:377: 				//########################### ADD PIPE #################################
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:379: 				//########################### ADD PIPE #################################
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:380: 				
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:381: 				if (pipe_ptr == 0){//there is no space in the pipe
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:384: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:385: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:386: 				if (consumer_PE != -1){//message has been requested
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:387: 					#ifdef SESSION_MANAGER
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:393: 					#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:396: 				} 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:397: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:398: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:402: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:405: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:406: 			if ( MemoryRead(DMNI_SEND_ACTIVE) ){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:408: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:409: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:412: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:415: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:417: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:419: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:420: 			//Test if the producer task is not allocated
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:421: 			if (producer_PE == -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:422: 				//Task is blocked until its a TASK_RELEASE packet
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:425: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:426: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:427: 			if (producer_PE == net_address){ //Local producer
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:428: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:429: 				//Searches if the message is in PIPE (local producer)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:431: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:432: 				if (pipe_ptr == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:433: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:434: 					//Stores the request into the message request table (local producer)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:436: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:437: 				} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:438: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:439: 					//Message was found in pipe, writes to the consumer page address (local producer)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:440: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:442: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:444: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:446: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:447: 					for (int i = 0; i<msg_write->length; i++) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:449: 					}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:450: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:452: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:453: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:454: 			} else { //Remote producer : Sends the message request (remote producer)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:455: 				#ifdef SESSION_MANAGER
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:457: 				#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:462: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:463: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:464: 			//Sets task as waiting blocking its execution, it will execute again when the message is produced by a WRITEPIPE or incoming message Delivery
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:466: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:471: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:473: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:475: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:477: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:479: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:486: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:488: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:490: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:491: 			if (MemoryRead(DMNI_SEND_ACTIVE)){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:493: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:494: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:496: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:498: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:500: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:502: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:504: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:506: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:508: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:509: 			if ( MemoryRead(DMNI_SEND_ACTIVE) ){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:511: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:512: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:514: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:516: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:517: 			/*Points the message in the task page. Address composition: offset + msg address*/
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:519: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:520: 			//########################### ADD PIPE #################################
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:522: 			//########################### ADD PIPE #################################
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:523: 			//if (pipe_ptr == 0){//there is no space in the pipe
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:527: 			//}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:528: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:530: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:532: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:534: 	
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:535: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:537: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:539: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:540: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:541: 			if ( MemoryRead(DMNI_SEND_ACTIVE) ){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:543: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:544: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:547: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:548: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:550: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:551: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:552: 			//Sets task as waiting blocking its execution, it will execute again when the message is produced by a WRITEPIPE or incoming message Delivery
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:553: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:555: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:557: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:559: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:561: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:562: 			/*
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:564: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:565: 			if (pipe_ptr == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:566: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:567: 				if (producer_PE == net_address){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:568: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:570: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:571: 				} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:572: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:574: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:575: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:577: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:579: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:581: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:582: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:584: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:586: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:588: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:589: 			for (int i = 0; i<msg_write->length; i++) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:591: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:592: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:594: 		*/		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:595: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:596: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:597: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:599: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:600: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:601: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:602: int Aplly_LSFR(lfsr_data_t polynom_d, lfsr_data_t init_value_d,  lfsr_data_t polynom_c, lfsr_data_t init_value_c)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:603: {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:607: //    lfsr_data_t polynom_d, init_value_d,
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:609: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:611: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:613: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:614:     do {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:617: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:618: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:619:         if (bitc0) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:621: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:622:             if (bitpos < 0) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:626:             }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:627: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:630: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:632:         } else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:634:         }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:635: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:639: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:641: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:642: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:643: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:644: /** Handles a new packet from NoC
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:645:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:646: int handle_packet(volatile ServiceHeader * p) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:652: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:659: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:661: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:662: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:669: 	
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:670: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:671: 	switch (p->service) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:672: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:675: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:676: 		#ifdef SESSION_MANAGER
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:683: 	
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:687: 		if (auxIndex < 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:690: 			if (auxSlot < 0)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:693: 		}else{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:695: 			if (auxSession->status == WAITING_ANY)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:696: 			{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:703: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:704: 			else if (auxSession->status == WAITING_DATA)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:705: 			{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:707: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:709: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:710: 				//Test if there is no message in PIPE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:711: 				if (slot_ptr == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:712: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:713: 					//Gets the location of the producer task
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:715: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:716: 					//This if check if the task was migrated
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:717: 					if ( task_loc != -1 && task_loc != net_address && p->requesting_processor == p->source_PE){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:718: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:719: 						//MESSAGE_REQUEST by pass
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:722: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:723: 						if ( search_PIPE_producer(p->producer_task) == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:724: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:726: 						}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:727: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:728: 					} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:729: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:731: 					}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:732: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:733: 				} else if (p->requesting_processor != net_address){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:737: 					
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:738: 				//This else is executed when this slave receved a own MESSAGE_REQUEST due a by pass
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:739: 				} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:742: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:744: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:745: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:747: 		#else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:748: 		//Remove msg from PIPE, if there is no message, them slot_ptr will be 0
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:752: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:754: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:755: 		//Test if there is no message in PIPE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:756: 		if (slot_ptr == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:757: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:758: 			//Gets the location of the producer task
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:760: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:761: 			//This if check if the task was migrated
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:762: 			if ( task_loc != -1 && task_loc != net_address && p->requesting_processor == p->source_PE){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:763: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:764: 				//MESSAGE_REQUEST by pass
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:767: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:768: 				if ( search_PIPE_producer(p->producer_task) == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:769: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:771: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:772: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:773: 			} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:774: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:776: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:777: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:778: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:779: 		} else if (p->requesting_processor != net_address){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:784: 		//This else is executed when this slave receved a own MESSAGE_REQUEST due a by pass
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:785: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:786: 		} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:787: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:789: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:791: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:792: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:794: 		#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:798: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:808: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:811: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:813: 		if(tcb_ptr->scheduling_ptr->status != BLOCKED)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:816: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:817: 		#if MIGRATION_ENABLED
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:818: 			if (tcb_ptr->proc_to_migrate != -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:821: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:822: 			} else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:823: 		#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:824: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:825: 		if (current == &idle_tcb){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:827: 		}			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:828: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:830: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:831: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:833: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:836: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:837: 	#ifdef SESSION_MANAGER 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:841: 		if (auxIndex < 0)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:843: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:846: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:849: 		if (auxSession->status == WAITING_ANY){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:850: 				
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:852: 					
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:856: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:857: 			//Escreve na fila de Mensagens
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:860: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:861: 		}else if (auxSession->status == WAITING_DATA){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:862: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:863: 			if (tInit - auxSession->time  > LAT_THRESHOLD)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:864: 			//Escreve direto na TAREFA
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:869: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:870: 		}else{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:872: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:873: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:874: 		if(DMNI_read_data((unsigned int)msg_ptr->msg, msg_ptr->length) == -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:875: 			// received a packet with incomplete payload; discard it
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:879: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:880: 		else if (auxSession->status == WAITING_DATA){		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:885: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:888: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:889: 			if(tcb_ptr->scheduling_ptr->status != BLOCKED)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:891: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:892: 			if(p->service != IO_DELIVERY){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:894: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:895: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:896: 			#if MIGRATION_ENABLED
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:897: 				if (tcb_ptr->proc_to_migrate != -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:900: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:901: 				} else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:902: 			#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:903: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:904: 			if (current == &idle_tcb){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:906: 			}			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:907: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:908: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:909: 	#else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:912: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:914: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:916: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:917: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:921: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:922: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:923: 		if(DMNI_read_data((unsigned int)msg_ptr->msg, msg_ptr->length) == -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:924: 			//received a packet with incomplete payload; discard it
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:928: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:929: 		else{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:932: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:933: 			if(tcb_ptr->scheduling_ptr->status != BLOCKED)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:935: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:936: 			if(p->service != IO_DELIVERY){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:938: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:939: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:942: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:943: 			#if MIGRATION_ENABLED
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:944: 				if (tcb_ptr->proc_to_migrate != -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:947: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:948: 				} else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:949: 			#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:950: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:951: 			if (current == &idle_tcb){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:953: 			}			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:954: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:955: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:956: 	#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:957: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:961: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:964: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:966: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:967: 		if(tcb_ptr == 0){  //task allocation before task_release
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:968: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:970: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:972: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:974: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:976: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:977: 		// common code independent of function order: task allocation <---> task_release
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:979: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:981: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:983: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:985: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:987: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:989: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:991: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:993: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:995: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:996: //************************************
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:997: 		/*if(tcb_ptr->secure == 1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:998: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:999: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1001: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1004: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1007: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1008: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1009: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1012: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1014: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1017: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1020: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1023: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1027: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1028: 			//if (calculated_hash == received_hash){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1029: 			if (received_hash == received_hash){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1032: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1033: 			else{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1036: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1037: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1038: 		}*/
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1040: //************************************		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1041: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1042: 		if (current == &idle_tcb){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1044: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1045: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1046: 		if(new_ptr == 0){  //task allocation after task_release
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1047: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1048: 			tcb_ptr->text_lenght = code_lenght- tcb_ptr->data_lenght;  // aqui
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1049: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1050: 			if(tcb_ptr->secure != 1)						// aqui
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1052: 			else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1054: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1056: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1058: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1059: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1061: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1064: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1066: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1067: 		if(tcb_ptr == 0){  //task_release before task_allocation 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1068: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1070: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1072: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1074: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1076: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1078: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1080: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1082: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1084: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1085: 		if(p->secure)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1087: 		else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1090: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1092: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1093: 		if (get_task_location(tcb_ptr->id) == -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1094: 			for (int i = 0; i < p->app_task_number; i++){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1096: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1097: 		}			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1098: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1099: 		if (current == &idle_tcb){   
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1101: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1102: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1103: 		if(new_ptr == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1104: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1106: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1107: 			if(tcb_ptr->secure != 1)						
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1109: 			else
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1111: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1113: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1115: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1117: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1118: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1121: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1123: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1125: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1127: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1129: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1130: 		//if (get_task_location(tcb_ptr->id) == -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1131: 			for (int i = 0; i < p->app_task_number; i++){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1136: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1137: 		//}			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1138: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1140: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1142: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1146: 		if (is_another_task_running(p->task_ID >> 8)){ // FOCHI ADD 01/06/2017 orientações do Ruaro.
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1148: 			update_msg_request_table((p->task_ID & 0xFF), p->allocated_processor);//			FOCHI ADD 02/10/2017 orientações do Caimi.
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1151: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1152: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1154: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1156: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1158: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1160: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1162: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1164: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1166: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1168: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1170: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1172: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1174: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1175: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1177: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1180: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1182: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1184: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1186: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1188: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1189: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1190: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1191: 	#if MIGRATION_ENABLED
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1201: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1202: 			//cluster_master_address = get_master_address(get_net_address()); //fochi
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1203: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1205: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1207: 	#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1208: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1209: 	default:
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1219: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1220: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1222: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1223: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1224: /** Generic task scheduler call
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1225:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1226: void Scheduler() {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1227: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1230: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1232: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1234: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1235: 	#if MIGRATION_ENABLED
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1236: 		if (current->proc_to_migrate != -1 && current->scheduling_ptr->status == RUNNING){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1239: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1240: 	#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1241: 	
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1243: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1245: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1246: 	if (scheduled){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1247: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1248: 		//This cast is an approach to reduce the scheduler call overhead
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1250: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1252: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1253: 	} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1254: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1256: 		current = &idle_tcb;	// schedules the idle task
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1257: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1259: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1261: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1262: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1264: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1266: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1267: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1268: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1269: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1270: int SeekInterruptHandler(){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1281: 	//for backtrack
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1282: 	MemoryWrite(SEEK_BACKTRACK_REG_SEL,0);//TODO extender para um backtrack maior que 32 bits
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1292: 	
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1293: 	// For TICKET
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1300: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1301: 	switch(service){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1303: 			//perform clear
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1305: 			//global variable for finding seek
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1308: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1311: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1312: 			if(seek_unr_count == (source>>16)){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1315: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1320: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1331: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1334: 			Set_Secure_Zone(target, payload, source); // verificação interna
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1336: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1337: 		#ifdef SESSION_MANAGER
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1344: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1345: 			auxCode = ((source >> 16) & 0xFFC0); // 10 bits de código
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1348: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1349: 			if (deliveryTicket[auxIndex].pairIndex == 0x3F){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1352: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1356: 			if(auxIndex != 0x3F)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1357: 			{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1361: 				
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1363: 				if (auxSession->status == WAITING_TICKET)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1364: 				{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1367: 					if (msg_ptr == -1)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1369: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1371: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1372: 					if (tcb_ptr == 0)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1374: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1376: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1377: 					if (remove_msg_request(get_task_location(auxProducer), auxConsumer, auxProducer) == 0)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1379: 					
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1380: 					if (auxSession->rcvd != (source & 0xFFFF) +1)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1382: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1386: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1387: 				}else if (auxSession->status == WAITING_ANY){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1388: 					// if (auxSession->rcvd +1 != (source & 0xFFFF))
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1393: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1394: 			}else{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1396: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1400: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1406: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1408: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1409: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1412: 			auxCode = ((source >> 16) & 0xFFC0); // 10 bits de código  "1111 1111 11 00 0000"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1413: 			auxIndex = ((source >> 16) & 0x3F); // 6 bits do índice 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1416: 			if (auxCode == 0xFFC0){ // END_SESSION // Se o código for "11 1111 1111"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1420: 				clearTicket(deliveryTicket, auxIndex); // O índice vem junto no "code"
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1421: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1422: 			else if(deliveryTicket[auxIndex].code != auxCode) //START_SESSION
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1423: 			{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1425: 				if (checkTicketCode(deliveryTicket, auxCode) == START_SESSION){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1427: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1429: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1430: 			if (deliveryTicket[auxIndex].code == auxCode) //default
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1431: 			{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1435: 				// if (auxService != -1)
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1437: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1438: 				if ((auxSession->status == WAITING_ANY) || (auxService != -1))
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1439: 				{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1444: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1445: 				if ((auxSession->status == WAITING_TICKET) || (auxService != -1))
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1446: 				{
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1448: 					
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1450: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1452: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1453: 					//Test if there is no message in PIPE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1454: 					if (tmpSlot == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1456: 						//Gets the location of the producer task
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1458: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1459: 						//This if check if the task was migrated
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1460: 						if ( task_loc != -1 && task_loc != net_address && auxService->requesting_processor == auxService->source_PE){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1461: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1462: 							//MESSAGE_REQUEST by pass
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1464: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1465: 							if ( search_PIPE_producer(auxService->producer_task) == 0){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1466: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1468: 							}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1469: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1470: 						} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1471: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1473: 						}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1474: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1475: 					} else if (auxService->requesting_processor != net_address){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1479: 					} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1483: 					}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1486: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1487: 			}		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1491: 		#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1492: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1498: 			// Ignorar se for secure já
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1499: 			if (LOCAL_right_high_corner != -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1501: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1503: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1515: 			if(LOCAL_right_high_corner == aux){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1518: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1519: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1524: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1532: 			if(LOCAL_right_high_corner == aux){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1535: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1536: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1537: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1538: 			for(int i = 0; i < MAX_LOCAL_TASKS; i++){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1539: 				if ((tcbs[i].id >> 8) == target){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1548: 				}	
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1549: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1551: 			if(LOCAL_right_high_corner == payload){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1554: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1557: 			if(get_net_address() == payload){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1559: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1561: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1568: 			
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1571: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1574: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1577: 			if((my_X_addr == RH_X_addr) && (my_Y_addr == RH_Y_addr)){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1580: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1581: 			if((my_X_addr <=  RH_X_addr) && (my_X_addr >= LL_X_addr))
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1582: 				if((my_Y_addr <=  RH_Y_addr) && (my_Y_addr >= LL_Y_addr)){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1585: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1587: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1592: 					
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1594: 				
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1597: 				if(payload == get_net_address()){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1600: 				}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1605: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1613: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1614: 		// case WAIT_KERNEL_SERVICE: //enviado pelo Mestre WARD do cluster
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1615: 		// 	puts("Received WAIT_KERNEL_SERVICE from "); puts(itoh((source&0xFFFF))); puts("\n"); //WARNING puts necessário para sincronização
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1616: 		// 	Seek(WAIT_KERNEL_SERVICE_ACK, target, (source&0xFFFF),0);//Send to slave a warning to became a new master
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1617: 		// 	puts("Send WAIT_KERNEL_SERVICE_ACK to "); puts(itoh((source&0xFFFF))); puts("\n"); //WARNING puts necessário para sincronização
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1621: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1623: 		// case LOAN_PROCESSOR_REQUEST_SERVICE:
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1624: 		// case LOAN_PROCESSOR_RELEASE_SERVICE:
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1626: 		
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1628: 		// 	puts("Kernel GMV Serbvice Recebido\n"); //Testando se chegou isso
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1633: 					
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1634: 		default:
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1637: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1639: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1640: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1641: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1642: int get_cluster_ID(int x, int y){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1644: 	for (int i=0; i<CLUSTER_NUMBER; i++){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1645: 		if (cluster_info[i].master_x == x && cluster_info[i].master_y == y){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1647: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1648: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1651: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1652: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1653: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1654: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1655: /** Function called by assembly (into interruption handler). Implements the routine to handle interruption in HeMPS
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1656:  * \param status Status of the interruption. Signal the interruption type
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1657:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1658: void OS_InterruptServiceRoutine(unsigned int status) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1659: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1661: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1665: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1666: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1667: 	if (current == &idle_tcb){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1669: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1670: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1672: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1673: 	if ( status & IRQ_NOC ){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1676: 		//printar o tempo do novo tratamento
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1677: 		if (read_packet(&p) != -1){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1678: 			if (MemoryRead(DMNI_SEND_ACTIVE) && (p.service == MESSAGE_REQUEST || p.service == TASK_MIGRATION) ){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1679: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1681: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1682: 			} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1683: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1685: 			}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1686: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1687: 		else{//failed packet reception
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1689: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1690: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1691: 	} else if (status & IRQ_PENDING_SERVICE) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1692: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1694: 		if (next_service){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1696: 		}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1697: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1698: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1699: 	if (status & IRQ_SLACK_TIME){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1703: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1704: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1705: 	if ( status & IRQ_SCHEDULER ){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1706: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1708: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1709: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1710: 	if ( status & IRQ_SEEK ){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1711: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1713: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1714: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1715: 	if (call_scheduler){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1716: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1718: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1719: 	} else if (current == &idle_tcb){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1720: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1722: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1724: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1725: 	} else {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1727: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1728: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1729:     /*runs the scheduled task*/
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1731: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1732: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1733: /** Clear a interruption mask
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1734:  * \param Mask Interruption mask clear
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1735:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1736: unsigned int OS_InterruptMaskClear(unsigned int Mask) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1737: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1739: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1742: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1744: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1745: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1746: /** Set a interruption mask
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1747:  * \param Mask Interruption mask set
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1748:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1749: unsigned int OS_InterruptMaskSet(unsigned int Mask) {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1750: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1752: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1755: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1757: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1758: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1759: /** Idle function
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1760:  */
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1761: void OS_Idle() {
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1762: 	for (;;){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1764: 	}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1765: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1766: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1767: int main(){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1769: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1771: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1772: 	#ifdef AES_MODULE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1777: 	#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1778: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1779: 	#ifdef PRESENT_MODULE
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1784: 	#endif
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1785: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1786: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1791: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1793: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1795: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1797: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1799: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1801: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1803: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1805: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1806: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1808: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1810: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1812: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1814: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1816: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1818: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1819: 	/*disable interrupts*/
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1821: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1822: 	//if (get_net_address() == 0x00000202){
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1826: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1828: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1830: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1831: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1833: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1835: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1836: //
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1837: 	//}
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1838: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1839: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1840: 	/*enables timeslice counter and wrapper interrupts*/
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1841: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1842: 	//WARNING: NOT ENABLING this fucking shit of IRQ_SLACK_TIME
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1843: 	//by Wachter
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1845: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1846: 	/*runs the scheduled task*/
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1848: 
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1850: }
e:\hemps_OSZ\software\kernel\slave\kernel_slave.c:1851: 
Matched 1031 lines(55.70%) in 1 files(100%), read 1851 lines 55.51 KB in 1 files. Used 1.071479 s, from 2021-07-15 17:20:01.838606 -0300 ESAST. Checked 1 files, opened 1 files 55.51 KB, matched 1 files = 55.51 KB = 56846 bytes. Source = e:\hemps_OSZ\software\kernel\slave\kernel_slave.c . 
